name: unit tests
on: [push, pull_request]
jobs:
  cache-doxygen:
    uses: ./.github/workflows/cache_doxygen.yml

  build:
    needs: cache-doxygen
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        doxygen-version: ['1.9.4', '1.9.7']
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
        sphinx-version:
          - '4.2.0'
          - '4.3.2'
          - '4.5.0'
          - '5.0.2'
          - '5.1.1'
          - '5.3.0'
          - '6.1.3'
          - git+https://github.com/sphinx-doc/sphinx.git@master
        exclude:
          # the git version isn't compatible with Python 3.8
          - python-version: '3.8'
            sphinx-version: git+https://github.com/sphinx-doc/sphinx.git@master

    steps:
      - uses: actions/checkout@v2
      - name: set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: |
            requirements/development.txt
            requirements/production.txt

      - name: install sphinx from PyPI or from git
        run: |
          if echo "${{ matrix.sphinx-version }}"|grep -q git; then
              pip install ${{ matrix.sphinx-version }}
          else
              pip install -Iv Sphinx==${{ matrix.sphinx-version }}
          fi

      - uses: actions/cache/restore@v4
        id: cache-doxygen
        with:
          path: doxygen-bin-arc
          fail-on-cache-miss: true
          key: ${{ runner.os }}-doxygen-${{ matrix.doxygen-version }}

      - name: install Doxygen
        run: |
          cd doxygen-bin-arc
          if test -d doxygen; then
            cd doxygen
          else
            gunzip doxygen.tar.gz
            tar xf doxygen.tar
            cd doxygen-${{ matrix.doxygen-version }}
          fi
          sudo make install

      - name: install dependencies and build extension module
        run: |
          pip install -r requirements/development.txt
          pip install --editable .

      - name: run the unit tests
        run: make dev-test
